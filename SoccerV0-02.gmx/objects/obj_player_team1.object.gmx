<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_green</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-99999</depth>
  <persistent>-1</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>image_speed=0;
selected=false;
length = 50;
is_dragging=false;

min_length=50;
max_length=120;

kick_power=0;
min_kick_power=0;
max_kick_power=1;
in_turn=false;
pushed = false;
has_completed=false;
can_select = true;
my_id = instance_number(obj_player_team1);


</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>var radius=sprite_get_width(spr_selected_arrow)/2;
var bounds;
    bounds[0] = x;
    bounds[1] = y;
    bounds[2] = x - lengthdir_x(radius, image_angle);
    bounds[3] = y - lengthdir_y(radius, image_angle);
  
if(!selected &amp;&amp; can_select &amp;&amp; mouse_check_button_pressed(mb_left) &amp;&amp; position_meeting(mouse_x,mouse_y,id) and global.current_turn="Self")
{
  with(obj_player_team1)
    selected = false;
  
  selected=true;
  
  length=50;
  
      buffer_seek(global.buffer, buffer_seek_start, 0);
      buffer_write(global.buffer, buffer_u8, 6);
      buffer_write(global.buffer, buffer_u8, my_id);
      buffer_write(global.buffer, buffer_u8, true);
      Send();
  }
   
else 
   
  if(!is_dragging &amp;&amp; selected &amp;&amp; mouse_check_button_pressed(mb_left) &amp;&amp; point_distance(x,y,mouse_x,mouse_y)&lt;radius + 20)
    is_dragging=true;
    

      
  if(is_dragging and mouse_check_button(mb_left) &amp;&amp; selected) 
  {
      in_turn=true;
      //here we will send 
      phy_rotation=point_direction(mouse_x,mouse_y,x,y)*(-1);
      
      var mx = clamp(mouse_x, min(bounds[0], bounds[2]), max(bounds[0], bounds[2])) 
      var my = clamp(mouse_y, min(bounds[1], bounds[3]), max(bounds[1], bounds[3]))
      length=point_distance(x,y,mx,my);
      length=clamp(length,min_length,max_length);
      kick_power=lerp(min_kick_power,max_kick_power,(length-min_length)/(max_length-min_length))
      buffer_seek(global.buffer, buffer_seek_start, 0);
      buffer_write(global.buffer, buffer_u8, 5);
      buffer_write(global.buffer, buffer_u8, my_id);
      buffer_write(global.buffer, buffer_u8, length);
      buffer_write(global.buffer, buffer_f32, phy_rotation);
      Send();
}
  
  if(is_dragging &amp;&amp; mouse_check_button_released(mb_left) &amp;&amp; selected &amp;&amp; kick_power&gt;0.05) {
   buffer_seek(global.buffer, buffer_seek_start, 0);
   buffer_write(global.buffer, buffer_u8, 7);
   buffer_write(global.buffer, buffer_u8, my_id);
   buffer_write(global.buffer, buffer_f32, kick_power);
   Send();
   
  physics_apply_impulse(x,y,lengthdir_x(kick_power*2500, phy_rotation*-1), lengthdir_y(kick_power*2500, phy_rotation*-1));
  pushed = true;
  mvsnd=audio_play_sound(snd_playermove,99,0)
  audio_sound_gain(mvsnd,0.1+kick_power,0)
  }
  
  
 
    

if(selected and in_turn and pushed) {
selected=false;
in_turn=false;
pushed=false;
buffer_seek(global.buffer, buffer_seek_start, 0);
buffer_write(global.buffer, buffer_u8, 6);
buffer_write(global.buffer, buffer_u8, my_id);
buffer_write(global.buffer, buffer_u8, false);
Send();


has_completed=true;
with(obj_player_team1) {
can_select = false;
}
}

if(has_completed=true and phy_speed &lt;= 0.05)
{
with(obj_player_team1) {
can_select = true;
}
with(obj_ball) {
addedscore=false;

}

buffer_seek(global.buffer, buffer_seek_start, 0);
buffer_write(global.buffer, buffer_u8, 8);
Send();
global.current_turn = "Other";
has_completed = false;

}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="obj_ball">
      <action>
        <libid>1</libid>
        <id>605</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>0</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string></string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="obj_solid">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>snd=audio_play_sound(snd_kick,90,0)
audio_sound_pitch(snd,0.8+random(0.4))
audio_sound_gain(snd,0.1+(phy_speed*0.05),0)
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="obj_player_other">
      <action>
        <libid>1</libid>
        <id>605</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>0</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string></string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="obj_player_team1">
      <action>
        <libid>1</libid>
        <id>605</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>0</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string></string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>

draw_self();


if(selected==true) {
draw_sprite_ext(spr_selected_circle, 0, x, y,1,1,image_angle, c_white, 1);
draw_sprite_ext(spr_selected_arrow, 0, x, y, 1, 1, image_angle, c_white,1);
draw_self();
draw_sprite_ext(spr_selector, 0, x-lengthdir_x(length, image_angle), y-lengthdir_y(length, image_angle),1,1,image_angle, c_white, 1);
}
/*
draw_set_halign(fa_center);
draw_text(x,y+70, "pushed: "+string(pushed));
draw_text(x,y+85, "Selected: "+string(selected));
draw_text(x,y+100, "in_turn: "+string(in_turn));
draw_text(x,y+115, "speed: "+string(phy_speed));
draw_text(x,y+130, "can_select: "+string(can_select));
draw_text(x,y+145, "has_completed: "+string(has_completed));*/
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>-1</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.800000011920929</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.800000011920929</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.800000011920929</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.800000011920929</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints>
    <point>46,37</point>
    <point>44,44</point>
  </PhysicsShapePoints>
</object>

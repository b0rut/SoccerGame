<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>-1</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>ip = get_string("Enter IP Address: ", "193.77.67.215");
port =13374;
global.current_turn = "Other";
global.pList = ds_list_create(); // creates playerlist
global.rooms = ds_list_create();
global.socket = network_create_socket(network_socket_tcp);
global.connected = network_connect(global.socket, ip, port);
global.roomid = -1;
global.rooms = ds_list_create();
global.wins = 0;
global.looses = 0;
global.experience = 0;
global.side = -1;
if(global.connected &lt; 0) {
    show_message("unable to connect");
    
}


connected_img_spr = 1;

global.buffer=buffer_create(1024, buffer_fixed, 1);
buffer_seek(global.buffer, buffer_seek_start, 0);
buffer_write(global.buffer, buffer_u8, 0);
buffer_write(global.buffer, buffer_string, global.username);

Send();




</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="68">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>var type_event = ds_map_find_value(async_load, "type");

switch(type_event) { 
case network_type_data:
rec_buffer = ds_map_find_value(async_load, "buffer");
buffer_seek(rec_buffer, buffer_seek_start, 0);

var mid = buffer_read(rec_buffer, buffer_u8);
switch(mid) {

case 0:

var wins = buffer_read(rec_buffer, buffer_u16);
var looses = buffer_read(rec_buffer, buffer_u16);
var experience = buffer_read(rec_buffer, buffer_u32);
global.wins = wins;
global.looses = looses;
global.experience = experience;


break;


case 2:

var NumberOfPlayersSearching = buffer_read(rec_buffer, buffer_u16);
 
break;


case 3:
if(!instance_exists(obj_matchfound)) {

instance_create(740, 700, obj_matchfound);

}
break;

case 4:
room_goto(room0);
var roomid = buffer_read(rec_buffer, buffer_u8);
var side = buffer_read(rec_buffer, buffer_bool);
//var other_name = buffer_read(rec_buffer, buffer_string);
//global.other_name = other_name;


//Let's see which side we have picked
//var side = buffer_read(rec_buffer, buffer_string);
var ball = instance_create(1008, 896, obj_ball);
global.side = side;
if(side == 0) {
//our side
var ins = instance_create(400,640, obj_player_team1);
var ins = instance_create(400,1152, obj_player_team1);
var ins = instance_create(640,896, obj_player_team1);
var ins = instance_create(800,656, obj_player_team1);
var ins = instance_create(800,1136, obj_player_team1);
//other side

var ins = instance_create(1202,1136, obj_player_other);
var ins = instance_create(1376,896, obj_player_other);
var ins = instance_create(1202,656, obj_player_other);
var ins = instance_create(1616,640, obj_player_other);
var ins = instance_create(1616,1152, obj_player_other);

}
else if(side == 1) {
var ins = instance_create(1202,1136, obj_player_team1);
var ins = instance_create(1376,896, obj_player_team1);
var ins = instance_create(1202,656, obj_player_team1);
var ins = instance_create(1616,640, obj_player_team1);
var ins = instance_create(1616,1152, obj_player_team1);

//other side

var ins = instance_create(400,640, obj_player_other);
var ins = instance_create(400,1152, obj_player_other);
var ins = instance_create(640,896, obj_player_other);
var ins = instance_create(800,656, obj_player_other);
var ins = instance_create(800,1136, obj_player_other);

}



break;


case 5:
var myid = buffer_read(rec_buffer, buffer_u8);
var length = buffer_read(rec_buffer, buffer_u8);
var angle = buffer_read(rec_buffer, buffer_f32);

var obj = FindObjectById(obj_player_other, myid);
obj.length = length;
obj.phy_rotation=angle;



break;

case 6:
var myid = buffer_read(rec_buffer, buffer_u8);
var selected = buffer_read(rec_buffer, buffer_bool);
var obj = FindObjectById(obj_player_other, myid);

obj.selected = selected;
break;

case 7:
var myid = buffer_read(rec_buffer, buffer_u8);
var kick_power = buffer_read(rec_buffer, buffer_f32);
var obj = FindObjectById(obj_player_other, myid);

obj.kick_power = kick_power;
with(obj) {
event_user(0);

}
break;

case 8:
global.current_turn = "Self";

with(obj_controller) {
draw_now = true;
alarm[0] = room_speed*global.timer;
}

break;

case 9:

var msg = buffer_read(rec_buffer, buffer_string);
show_message(msg);
room_goto(room2);
with(obj_player_team1) {
instance_destroy();
}
with(obj_player_other) {
instance_destroy();
}
with(obj_ball) {
instance_destroy();
}
with(obj_controller) {
instance_destroy();
}
global.roomid = -1;
global.side = -1;

}
break;

case 10:
//other player has declined the match
show_message("Other player has declined the match...returning to lobby");

break;


}




</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
